# Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
# Copyright (C) Dassault Systemes - 2022 - Clement DAVID
#
#
# This YAML file describe the build stage of the CI. This stage delegates the
# build action to shell scripts, it creates job per platform and handle Merge
# Request as well as nightly/release build.
#

# build scilab using a windows runner
.x64_windows_build:
  extends: .docker-image-windows
  stage: build
  # needs:
  # - x64_windows_cleanup_builds
  tags: [x64_windows, scilab, docker]
  variables:
    GIT_CLEAN_FLAGS: none
  script:
    - process = Start-Process -FilePath ".gitlab-ci\build.bat" -Wait -PassThru -RedirectStandardOutput log.txt
    - exit process.ExitCode
  artifacts:
    paths:
      - log*.txt
      - scilab/modules/core/includes/version.h
      - scilab*.exe
    when: always
# build an preview/branched version
x64_windows_build_branch:
  extends: .x64_windows_build
  # needs:
  #   - x64_windows_set_branch_env
  #   - contains_changes_modification
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
# build a nightly version
x64_windows_build_nightly:
  extends: .x64_windows_build
  # needs:
  #   - x64_windows_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
# build a release version
x64_windows_build_release:
  extends: .x64_windows_build
  # needs:
  #   - x64_windows_clean
  #   - x64_windows_set_release_env
  #   - prepare_release_files
  rules:
    - if: $CI_COMMIT_TAG
# # build scilab using a linux runner
# .x86_64-linux-gnu_build:
#   stage: build
#   needs:
#     - x86_64-linux-gnu_cleanup_builds
#   tags: [x86_64-linux-gnu, docker, scilab]
#   script: bash -x -e .gitlab-ci/build.sh
#   artifacts:
#     paths:
#       - log*.txt
#       - scilab/modules/core/includes/version.h
#       - "$SCI_VERSION_STRING.bin.$ARCH.tar.xz"
#     when: always
# # build an preview/branched version
# x86_64-linux-gnu_build_branch:
#   extends: .x86_64-linux-gnu_build
#   variables:
#     GIT_CLEAN_FLAGS: none
#   needs:
#     - x86_64-linux-gnu_set_branch_env
#     - contains_changes_modification
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
# # build a nightly
# x86_64-linux-gnu_build_nightly:
#   extends: .x86_64-linux-gnu_build
#   variables:
#     GIT_CLEAN_FLAGS: -ffxd
#   needs:
#     - x86_64-linux-gnu_clean
#     - x86_64-linux-gnu_set_branch_env
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'schedule'
# # build a release
# x86_64-linux-gnu_build_release:
#   extends: .x86_64-linux-gnu_build
#   variables:
#     GIT_CLEAN_FLAGS: -ffxd
#   needs:
#     - x86_64-linux-gnu_set_release_env
#     - prepare_release_files
#   rules:
#     - if: $CI_COMMIT_TAG
