# build scilab using a windows runner
.build_x64_windows:
  stage: build
  needs: [cleanup_old_windows_builds, set_x64_windows_env]
  tags:
    - x64_windows
    - scilab
  variables:
      GIT_CLEAN_FLAGS: none
  script: call .gitlab-ci\build.bat
  artifacts:
    paths:
      - log*.txt
      - scilab-*.exe
    when: always

# build an intermediate version
build_x64_windows_branch:
  extends: .build_x64_windows
  variables:
      SCI_VERSION_STRING: scilab-branch-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_PROTECTED

# build a release
build_x64_windows_release:
  extends: .build_x64_windows
  needs:
    - prepare_release_files
  variables:
      SCI_VERSION_STRING: scilab-$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG

# build scilab using a linux runner
.build_x86_64-linux-gnu:
  stage: build
  needs: [cleanup_old_linux_builds, set_x86_64-linux-gnu_env]
  tags:
    - x86_64-linux-gnu
    - scilab
  variables:
      GIT_CLEAN_FLAGS: none
  script: bash -x -e .gitlab-ci/build.sh
  artifacts:
    paths:
      - log*.txt
      - scilab-*.tar.gz
    when: always

# build an intermediate version
build_x86_64-linux-gnu_branch:
  extends: .build_x86_64-linux-gnu
  variables:
      SCI_VERSION_STRING: scilab-branch-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_PROTECTED

# build a release
build_x86_64-linux-gnu_release:
  extends: .build_x86_64-linux-gnu
  needs:
    - prepare_release_files
  variables:
      SCI_VERSION_STRING: scilab-$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
