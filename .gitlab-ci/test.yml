# Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
# Copyright (C) Dassault Systemes - 2022 - Clement DAVID
#
#
# This YAML file describe the test stage of the CI. Tests run are defined
# per platform and split in good, bad and ugly sets. Special rules named
# impacted are added for modules modified by Merge Request.
#

.x64_windows_test:
  stage: test
  tags: [x64_windows, scilab]
  variables:
    # reuse download and install on each test
    GIT_CLEAN_FLAGS: none
  dependencies: []
  script: call .gitlab-ci\test.bat
  artifacts:
    when: always
    paths:
      - $SCI_VERSION_STRING_$ARCH_$TEST.xml
    reports:
      junit: $SCI_VERSION_STRING_$ARCH_$TEST.xml

x64_windows_test_branch_good:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_branch
    - x64_windows_set_branch_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  when: manual
  parallel:
    matrix: &GOOD_TEST_ANCHOR
      - TEST:
          - api_scilab
          - arnoldi
          - ast
          - boolean
          - cacsd
          - completion
          - console
          - core
          - coverage
          - data_structures
          - fftw
          - fileio
          - functions
          - history_manager
          - integer
          - parameters
          - polynomials
          - special_functions
          - spreadsheet
          - string
          - webtools
          - xml

x64_windows_test_branch_bad:
  extends: .x64_windows_test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  when: manual
  parallel:
    matrix: &BAD_TEST_ANCHOR
      - TEST:
          - demo_tools
          - development_tools
          - differential_equations
          - dynamic_link
          - elementary_functions
          - external_objects_java
          - graphic_export
          - graphic_objects
          - graphics
          - gui
          - hdf5
          - helptools
          - interpolation
          - io
          - jvm
          - linear_algebra
          - localization
          - m2sci
          - matio
          - mexlib
          - modules_manager
          - optimization
          - output_stream
          - overloading
          - parallel
          - randlib
          - renderer
          - scicos
          - scicos_blocks
          - scinotes
          - signal_processing
          - slint
          - sound
          - sparse
          - statistics
          - tclsci
          - time
          - ui_data
          - umfpack

x64_windows_test_branch_ugly:
  extends: .x64_windows_test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  when: manual
  parallel:
    matrix: &UGLY_TEST_ANCHOR
      - TEST:
          - atoms
          - mpi
          - windows_tools
          - xcos

x64_windows_test_nightly_good:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_nightly
    - x64_windows_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  parallel:
    matrix: *GOOD_TEST_ANCHOR

x64_windows_test_nightly_bad:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_nightly
    - x64_windows_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  parallel:
    matrix: *BAD_TEST_ANCHOR

x64_windows_test_nightly_ugly:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_nightly
    - x64_windows_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  parallel:
    matrix: *UGLY_TEST_ANCHOR

x64_windows_test_release_good:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_release
    - x64_windows_set_release_env
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix: *GOOD_TEST_ANCHOR

x64_windows_test_release_bad:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_release
    - x64_windows_set_release_env
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix: *BAD_TEST_ANCHOR

x64_windows_test_release_ugly:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_release
    - x64_windows_set_release_env
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix: *UGLY_TEST_ANCHOR

impacted_x64_windows_test_good:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_branch
    - x64_windows_set_branch_env
  rules: &IMPACTED_RULES
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - scilab/modules/$TEST/**/*
      when: always
  parallel:
    matrix: *GOOD_TEST_ANCHOR

impacted_x64_windows_test_bad:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_branch
    - x64_windows_set_branch_env
  rules: *IMPACTED_RULES
  parallel:
    matrix: *BAD_TEST_ANCHOR

impacted_x64_windows_test_ugly:
  extends: .x64_windows_test
  needs:
    - x64_windows_build_branch
    - x64_windows_set_branch_env
  rules: *IMPACTED_RULES
  parallel:
    matrix: *UGLY_TEST_ANCHOR

.x86_64-linux-gnu_test:
  stage: test
  tags: [x86_64-linux-gnu, docker, scilab]
  variables:
    # reuse download and install on each test
    GIT_CLEAN_FLAGS: none
  dependencies: []
  script: bash -e -x .gitlab-ci/test.sh
  artifacts:
    when: always
    paths:
      - $SCI_VERSION_STRING_$ARCH_$TEST.xml
    reports:
      junit: $SCI_VERSION_STRING_$ARCH_$TEST.xml

x86_64-linux-gnu_test_branch_good:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_branch
    - x86_64-linux-gnu_set_branch_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  parallel:
    matrix: *GOOD_TEST_ANCHOR

x86_64-linux-gnu_test_branch_bad:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_branch
    - x86_64-linux-gnu_set_branch_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  parallel:
    matrix: *BAD_TEST_ANCHOR

x86_64-linux-gnu_test_branch_ugly:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_branch
    - x86_64-linux-gnu_set_branch_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  parallel:
    matrix: *UGLY_TEST_ANCHOR

x86_64-linux-gnu_test_nightly_good:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_nightly
    - x86_64-linux-gnu_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  parallel:
    matrix: *GOOD_TEST_ANCHOR

x86_64-linux-gnu_test_nightly_bad:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_nightly
    - x86_64-linux-gnu_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  parallel:
    matrix: *BAD_TEST_ANCHOR

x86_64-linux-gnu_test_nightly_ugly:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_nightly
    - x86_64-linux-gnu_set_nightly_env
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  parallel:
    matrix: *UGLY_TEST_ANCHOR

x86_64-linux-gnu_test_release_good:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_release
    - x86_64-linux-gnu_set_release_env
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix: *GOOD_TEST_ANCHOR

x86_64-linux-gnu_test_release_bad:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_release
    - x86_64-linux-gnu_set_release_env
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix: *BAD_TEST_ANCHOR

x86_64-linux-gnu_test_release_ugly:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_release
    - x86_64-linux-gnu_set_release_env
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix: *UGLY_TEST_ANCHOR

impacted_x86_64-linux-gnu_test_good:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_branch
    - x86_64-linux-gnu_set_branch_env
  rules: &IMPACTED_RULES
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - scilab/modules/$TEST/**/*
      when: always
  parallel:
    matrix: *GOOD_TEST_ANCHOR

impacted_x86_64-linux-gnu_test_bad:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_branch
    - x86_64-linux-gnu_set_branch_env
  rules: *IMPACTED_RULES
  parallel:
    matrix: *BAD_TEST_ANCHOR

impacted_x86_64-linux-gnu_test_ugly:
  extends: .x86_64-linux-gnu_test
  needs:
    - x86_64-linux-gnu_build_branch
    - x86_64-linux-gnu_set_branch_env
  rules: *IMPACTED_RULES
  parallel:
    matrix: *UGLY_TEST_ANCHOR
