x64_windows_test_branch:
  stage: test
  tags: [x64_windows, scilab]
  variables:
      # enforce download and install on each test
      GIT_CLEAN_FLAGS: -fxd scilab-*
  needs:
    # build artifacts will be download by the script only if needed
    - job: x64_windows_build_branch
      artifacts: true
    # get env information used to build scilab
    - job: x64_windows_set_branch_env
      artifacts: true
  script: call .gitlab-ci\test.bat
  rules:
    - changes:
      - scilab/modules/$TESTS/**/*
  artifacts:
    when: always
    paths:
      - $TEST.xml
    reports:
      junit: $TEST.xml
  parallel:
    matrix:
      - &TEST_ANCHOR TEST: 
        - api_scilab
        - arnoldi
        - ast
        - atoms
        - boolean
        - cacsd
        - completion
        - console
        - core
        - coverage
        - data_structures
        - demo_tools
        - development_tools
        - differential_equations
        - dynamic_link
        - elementary_functions
        - external_objects_java
        - fftw
        - fileio
        - functions
        - graphic_export
        - graphic_objects
        - graphics
        - gui
        - hdf5
        - helptools
        - history_manager
        - integer
        - interpolation
        - io
        - jvm
        - linear_algebra
        - localization
        - m2sci
        - matio
        - mexlib
        - modules_manager
        - mpi
        - optimization
        - output_stream
        - overloading
        - parallel
        - parameters
        - polynomials
        - randlib
        - renderer
        - scicos
        - scicos_blocks
        - scinotes
        - signal_processing
        - slint
        - sound
        - sparse
        - special_functions
        - spreadsheet
        - statistics
        - string
        - tclsci
        - time
        - ui_data
        - umfpack
        - webtools
        - windows_tools
        - xcos
        - xml


x86_64-linux-gnu_test_branch:
  stage: test
  tags: [x86_64-linux-gnu, docker, $PICKED_RUNNER]
  variables:
      # enforce download and install on each test
      GIT_CLEAN_FLAGS: -fxd scilab-*
  needs:
    # build artifacts will be download by the script only if needed
    - job: x86_64-linux-gnu_build_branch
      artifacts: true
    # get env information used to build scilab
    - job: x86_64-linux-gnu_set_branch_env
      artifacts: true
  script: bash -e -x .gitlab-ci/test.sh
  rules:
    - changes:
      - scilab/modules/$TESTS/**/*
  artifacts:
    when: always
    paths:
      - $TEST.xml
    reports:
      junit: $TEST.xml
  parallel:
    matrix:
      - *TEST_ANCHOR
